{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\songe\\\\Documents\\\\Project\\\\SummerProject\\\\StarlingUI-frontend\\\\src\\\\components\\\\deployment-nodes\\\\Container.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ContainerSetting from './ContainerSetting';\nimport imagedel from '../../css/img/delete-svgrepo-com.svg';\nimport imageset from '../../css/img/setting-svgrepo-com.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Container(_ref) {\n  _s();\n\n  let {\n    image,\n    handleImageDelete,\n    handleContainerChange\n  } = _ref;\n  const [setting, setSetting] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-body-content node-image\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"image-name\",\n        onClick: () => setSetting(true),\n        children: image.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"setting-node-image-icon\",\n        src: imageset,\n        alt: \"setting\",\n        onClick: () => setSetting(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"delete-icon\",\n        src: imagedel,\n        alt: \"delete\",\n        onClick: () => handleImageDelete(image.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ContainerSetting, {\n      trigger: setting,\n      setTrigger: setSetting,\n      container: image,\n      handleContainerChange: handleContainerChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n} //<div className='image-tag-content' onClick={()=>setSetting(true)}>{image.name}</div>\n//<button className=\"material-symbols-outlined\" onClick = {()=>handleImageDelete(image.id)}>&times;</button>\n\n_s(Container, \"GbGpYnpm2MdKBejMBXknGqcDau0=\");\n\n_c = Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["React","useState","ContainerSetting","imagedel","imageset","Container","image","handleImageDelete","handleContainerChange","setting","setSetting","name","id"],"sources":["C:/Users/songe/Documents/Project/SummerProject/StarlingUI-frontend/src/components/deployment-nodes/Container.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport ContainerSetting from './ContainerSetting';\r\nimport imagedel from '../../css/img/delete-svgrepo-com.svg';\r\nimport imageset from '../../css/img/setting-svgrepo-com.svg';\r\n\r\nexport default function Container({image, handleImageDelete, handleContainerChange}) {  \r\n\r\n  const[setting, setSetting] = useState(false);\r\n  \r\n    return (\r\n    <>\r\n    <div className='items-body-content node-image'>\r\n      <span className='image-name' onClick={()=>setSetting(true)}>{image.name}</span>\r\n      <img className=\"setting-node-image-icon\" src={imageset} alt=\"setting\" onClick={()=>setSetting(true)}/>\r\n      <img className=\"delete-icon\" src={imagedel} alt=\"delete\" onClick = {()=>handleImageDelete(image.id)}/>\r\n    </div>\r\n    <ContainerSetting trigger={setting} setTrigger={setSetting} container={image} handleContainerChange={handleContainerChange}></ContainerSetting>\r\n    </>\r\n  )\r\n}\r\n\r\n//<div className='image-tag-content' onClick={()=>setSetting(true)}>{image.name}</div>\r\n//<button className=\"material-symbols-outlined\" onClick = {()=>handleImageDelete(image.id)}>&times;</button>\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,QAAP,MAAqB,uCAArB;;;AAEA,eAAe,SAASC,SAAT,OAAsE;EAAA;;EAAA,IAAnD;IAACC,KAAD;IAAQC,iBAAR;IAA2BC;EAA3B,CAAmD;EAEnF,MAAK,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAArC;EAEE,oBACA;IAAA,wBACA;MAAK,SAAS,EAAC,+BAAf;MAAA,wBACE;QAAM,SAAS,EAAC,YAAhB;QAA6B,OAAO,EAAE,MAAIS,UAAU,CAAC,IAAD,CAApD;QAAA,UAA6DJ,KAAK,CAACK;MAAnE;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,yBAAf;QAAyC,GAAG,EAAEP,QAA9C;QAAwD,GAAG,EAAC,SAA5D;QAAsE,OAAO,EAAE,MAAIM,UAAU,CAAC,IAAD;MAA7F;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAK,SAAS,EAAC,aAAf;QAA6B,GAAG,EAAEP,QAAlC;QAA4C,GAAG,EAAC,QAAhD;QAAyD,OAAO,EAAI,MAAII,iBAAiB,CAACD,KAAK,CAACM,EAAP;MAAzF;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAMA,QAAC,gBAAD;MAAkB,OAAO,EAAEH,OAA3B;MAAoC,UAAU,EAAEC,UAAhD;MAA4D,SAAS,EAAEJ,KAAvE;MAA8E,qBAAqB,EAAEE;IAArG;MAAA;MAAA;MAAA;IAAA,QANA;EAAA,gBADA;AAUH,C,CAED;AACA;;GAjBwBH,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}