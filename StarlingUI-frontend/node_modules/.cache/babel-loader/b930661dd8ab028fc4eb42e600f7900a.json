{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\songe\\\\Documents\\\\Project\\\\SummerProject\\\\StarlingUI-frontend\\\\src\\\\components\\\\monitor-contianer\\\\MonitorContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport { BarLoader } from 'react-spinners';\nimport { usePopperTooltip } from 'react-popper-tooltip';\nimport 'react-popper-tooltip/dist/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MonitorContainer(props) {\n  _s();\n\n  const [containerStatus, setContainerStatus] = useState(\"#32e6b7\");\n  const [buttonAvailable, setButtonAvailable] = useState(false);\n  const {\n    getArrowProps,\n    getTooltipProps,\n    setTooltipRef,\n    setTriggerRef,\n    visible\n  } = usePopperTooltip({\n    trigger: 'hover',\n    placement: 'right-end'\n  });\n  const override = `\n        display: block;\n        margin: 0 auto;\n    `;\n  const style = {\n    loading: props.reboot,\n    size: 30,\n    width: 250,\n    css: override,\n    color: \"#32e6b7\"\n  };\n  useEffect(() => {\n    // eslint-disable-next-line default-case\n    switch (props.containerState) {\n      case \"running\":\n        setContainerStatus(\"#32e6b7\");\n        setButtonAvailable(false);\n        break;\n\n      case \"null\":\n      case \"terminated\":\n        setContainerStatus(\"#dc5671\");\n        setButtonAvailable(true);\n        break;\n\n      case \"waiting\":\n        setContainerStatus(\"#EEC908\");\n        setButtonAvailable(true);\n        break;\n    }\n  }, [props]);\n\n  const openTerminal = () => {\n    const w = window.open('about:blank');\n    let url = '/terminal';\n    url += '/' + props.podName + '/' + props.namespace + '/' + props.containerName;\n    console.log(url);\n    w.location.href = url;\n  };\n\n  const openLogs = () => {\n    const w = window.open('about:blank');\n    let url = '/logs';\n    url += '/' + props.podName + '/' + props.namespace + '/' + props.containerName;\n    console.log(url);\n    w.location.href = url;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"k8s-container\",\n      ref: setTriggerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pole\",\n        style: {\n          backgroundColor: containerStatus\n        },\n        title: props.containerState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"info-name\",\n            title: props.containerName,\n            children: props.containerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), props.reboot ? /*#__PURE__*/_jsxDEV(BarLoader, { ...style\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 37\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"console-image\",\n            onClick: () => openTerminal(),\n            disabled: buttonAvailable\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"container-logs\",\n            onClick: () => openLogs(),\n            disabled: buttonAvailable\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: setTooltipRef,\n      ...getTooltipProps({\n        className: 'tooltip-container project-name-hint'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getArrowProps({\n          className: 'tooltip-arrow'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this), \"* Container has three state:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 49\n      }, this), \"* Green:Running\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 36\n      }, this), \"* Yello:Waiting(The container is in queue for startup, please wait.)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 89\n      }, this), \"* Red:Terminated(The container will restart automatically when it has a terminated state. Please wait.) \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 125\n      }, this), \"* Warning:Do not restart the pod multiple times in a short period of time\\\"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 95\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MonitorContainer, \"tLgGZQpsYDpTVdbVCX9/R6ofC24=\", false, function () {\n  return [usePopperTooltip];\n});\n\n_c = MonitorContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MonitorContainer\");","map":{"version":3,"names":["useState","useEffect","React","BarLoader","usePopperTooltip","MonitorContainer","props","containerStatus","setContainerStatus","buttonAvailable","setButtonAvailable","getArrowProps","getTooltipProps","setTooltipRef","setTriggerRef","visible","trigger","placement","override","style","loading","reboot","size","width","css","color","containerState","openTerminal","w","window","open","url","podName","namespace","containerName","console","log","location","href","openLogs","backgroundColor","className"],"sources":["C:/Users/songe/Documents/Project/SummerProject/StarlingUI-frontend/src/components/monitor-contianer/MonitorContainer.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport React from \"react\";\r\nimport { BarLoader } from 'react-spinners';\r\nimport { usePopperTooltip } from 'react-popper-tooltip';\r\nimport 'react-popper-tooltip/dist/styles.css';\r\n\r\n\r\nexport default function MonitorContainer(props) {\r\n    const [containerStatus, setContainerStatus] = useState(\"#32e6b7\");\r\n    const [buttonAvailable, setButtonAvailable] = useState(false);\r\n\r\n    const {\r\n        getArrowProps,\r\n        getTooltipProps,\r\n        setTooltipRef,\r\n        setTriggerRef,\r\n        visible,\r\n    } = usePopperTooltip({\r\n        trigger: 'hover',\r\n        placement: 'right-end',\r\n    });\r\n\r\n    const override = `\r\n        display: block;\r\n        margin: 0 auto;\r\n    `;\r\n\r\n    const style = {\r\n        loading: props.reboot,\r\n        size: 30,\r\n        width: 250,\r\n        css: override,\r\n        color: \"#32e6b7\",\r\n    };\r\n\r\n    useEffect(() => {\r\n        // eslint-disable-next-line default-case\r\n        switch (props.containerState) {\r\n            case \"running\":\r\n                setContainerStatus(\"#32e6b7\");\r\n                setButtonAvailable(false);\r\n\r\n                break;\r\n            case \"null\":\r\n            case \"terminated\":\r\n                setContainerStatus(\"#dc5671\");\r\n                setButtonAvailable(true);\r\n\r\n                break;\r\n            case \"waiting\":\r\n                setContainerStatus(\"#EEC908\");\r\n                setButtonAvailable(true);\r\n                break;\r\n        }\r\n\r\n    }, [props]);\r\n\r\n    const openTerminal = () => {\r\n        const w = window.open('about:blank');\r\n        let url = '/terminal';\r\n        url += '/' + props.podName\r\n            + '/' + props.namespace\r\n            + '/' + props.containerName\r\n        console.log(url);\r\n        w.location.href = url;\r\n    }\r\n\r\n    const openLogs = () => {\r\n        const w = window.open('about:blank');\r\n        let url = '/logs';\r\n        url += '/' + props.podName\r\n            + '/' + props.namespace\r\n            + '/' + props.containerName\r\n        console.log(url);\r\n        w.location.href = url;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"k8s-container\"\r\n                \r\n                ref={setTriggerRef}>\r\n                <div className=\"pole\"\r\n                    style={{ backgroundColor: containerStatus }}\r\n                    title={props.containerState}></div>\r\n                <div className=\"outer\">\r\n\r\n\r\n                    <div className=\"container-info\">\r\n                        <p className=\"info-name\" title={props.containerName}>{props.containerName}</p>\r\n                    </div>\r\n\r\n\r\n                    {props.reboot ? <BarLoader {...style} /> :\r\n                        <div className=\"button-list\">\r\n                            <button className=\"console-image\"\r\n                                onClick={() => openTerminal()}\r\n                                disabled={buttonAvailable}></button>\r\n                            <button className=\"container-logs\"\r\n                                onClick={() => openLogs()}\r\n                                disabled={buttonAvailable}></button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            {visible && (\r\n                <div\r\n                    ref={setTooltipRef}\r\n                    {...getTooltipProps({ className: 'tooltip-container project-name-hint' })}\r\n                >\r\n                    <div {...getArrowProps({ className: 'tooltip-arrow' })} />\r\n                    * Container has three state:<br />\r\n                    * Green:Running<br />\r\n                    * Yello:Waiting(The container is in queue for startup, please wait.)<br />\r\n                    * Red:Terminated(The container will restart automatically when it has a terminated state. Please wait.) <br />\r\n                    * Warning:Do not restart the pod multiple times in a short period of time\"<br />\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}