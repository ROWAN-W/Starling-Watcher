{"ast":null,"code":"import axios from \"axios\";\nimport { getCookie } from 'react-use-cookie';\nconst REFRESH_URL = 'http://localhost:8080/refresh';\nlet refresh = false;\naxios.interceptors.response.use(resp => resp, async error => {\n  //not start from login or register\n  if (getCookie('refreshToken') !== '' && error.response.status === 401 && !refresh) {\n    refresh = true;\n    const refreshToken = getCookie('refreshToken');\n    console.log(\"axios refresh \" + refreshToken);\n    const response = await axios.get(REFRESH_URL, {\n      headers: {\n        'Authorization': `Bearer ${refreshToken}`\n      }\n    }); //get a new access token\n\n    if (response.status === 200) {\n      error.config.headers.Authorization = `Bearer ${response.data['accessToken']}`;\n      console.log(\"axios access \" + response.data['accessToken']);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${response.data['accessToken']}`;\n      refresh = false;\n      return axios(error.config);\n    }\n  } else {\n    refresh = false;\n    console.log(\"other error\");\n    throw error;\n  }\n});","map":{"version":3,"names":["axios","getCookie","REFRESH_URL","refresh","interceptors","response","use","resp","error","status","refreshToken","console","log","get","headers","config","Authorization","data","defaults","common"],"sources":["C:/Users/songe/Documents/Project/SummerProject/StarlingUI-frontend/src/interceptors/axios.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { getCookie } from 'react-use-cookie'\r\nconst REFRESH_URL = 'http://localhost:8080/refresh';\r\n\r\nlet refresh = false;\r\n\r\naxios.interceptors.response.use(resp => resp, async error => {\r\n    //not start from login or register\r\n    if (getCookie('refreshToken') !=='' && error.response.status === 401 && !refresh) {\r\n        refresh = true;\r\n        const refreshToken = getCookie('refreshToken');\r\n        console.log(\"axios refresh \"+refreshToken);\r\n        const response = await axios.get(REFRESH_URL,\r\n            {\r\n                headers: { \r\n                    'Authorization': `Bearer ${refreshToken}` ,\r\n                },\r\n            }, );\r\n        //get a new access token\r\n        if (response.status === 200) {\r\n            error.config.headers.Authorization = `Bearer ${response.data['accessToken']}`;\r\n            console.log(\"axios access \"+response.data['accessToken']);\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${response.data['accessToken']}`;            \r\n            refresh = false;\r\n            return axios(error.config);\r\n        }\r\n    }\r\n    else{\r\n        refresh = false;\r\n        console.log(\"other error\");\r\n        throw error;\r\n    }\r\n});"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,MAAMC,WAAW,GAAG,+BAApB;AAEA,IAAIC,OAAO,GAAG,KAAd;AAEAH,KAAK,CAACI,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgCC,IAAI,IAAIA,IAAxC,EAA8C,MAAMC,KAAN,IAAe;EACzD;EACA,IAAIP,SAAS,CAAC,cAAD,CAAT,KAA6B,EAA7B,IAAmCO,KAAK,CAACH,QAAN,CAAeI,MAAf,KAA0B,GAA7D,IAAoE,CAACN,OAAzE,EAAkF;IAC9EA,OAAO,GAAG,IAAV;IACA,MAAMO,YAAY,GAAGT,SAAS,CAAC,cAAD,CAA9B;IACAU,OAAO,CAACC,GAAR,CAAY,mBAAiBF,YAA7B;IACA,MAAML,QAAQ,GAAG,MAAML,KAAK,CAACa,GAAN,CAAUX,WAAV,EACnB;MACIY,OAAO,EAAE;QACL,iBAAkB,UAASJ,YAAa;MADnC;IADb,CADmB,CAAvB,CAJ8E,CAU9E;;IACA,IAAIL,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;MACzBD,KAAK,CAACO,MAAN,CAAaD,OAAb,CAAqBE,aAArB,GAAsC,UAASX,QAAQ,CAACY,IAAT,CAAc,aAAd,CAA6B,EAA5E;MACAN,OAAO,CAACC,GAAR,CAAY,kBAAgBP,QAAQ,CAACY,IAAT,CAAc,aAAd,CAA5B;MACAjB,KAAK,CAACkB,QAAN,CAAeJ,OAAf,CAAuBK,MAAvB,CAA8B,eAA9B,IAAkD,UAASd,QAAQ,CAACY,IAAT,CAAc,aAAd,CAA6B,EAAxF;MACAd,OAAO,GAAG,KAAV;MACA,OAAOH,KAAK,CAACQ,KAAK,CAACO,MAAP,CAAZ;IACH;EACJ,CAlBD,MAmBI;IACAZ,OAAO,GAAG,KAAV;IACAQ,OAAO,CAACC,GAAR,CAAY,aAAZ;IACA,MAAMJ,KAAN;EACH;AACJ,CA1BD"},"metadata":{},"sourceType":"module"}