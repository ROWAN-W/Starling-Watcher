# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]
    

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - run: |
        for commit in $(git rev-list ${{origin/main}}); do
            git checkout $commit
            echo "run test"
        done
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file StarlingUI-backend/pom.xml
      
    - name: start minikube
      id: minikube
      with:
        minikube-version: 1.24.0
        driver: docker
        container-runtime: containerd
        kubernetes-version: v1.22.3
        cpus: 2
        memory: 4000m
        cni: bridge
      uses: medyagh/setup-minikube@master
    # now you can run kubectl to see the pods in the cluster
    - name: kubectl get pods
      run: kubectl get pods -A
    - name: kubectl get nodes
      run: kubectl get nodes -A
      
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push frontend
      uses: docker/build-push-action@v3
      with:
        context: StarlingUI-frontend
        run: chmod +x /usr/local/bin/docker-entrypoint.sh
        push: true
        tags: oshia/starling-frontend
        
    - name: Build and push backend
      uses: docker/build-push-action@v3
      with:
        context: StarlingUI-backend
        run: chmod +x /usr/local/bin/entry.sh
        push: true
        tags: oshia/starling-backend
        
